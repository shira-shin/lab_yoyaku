generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Group {
  id        String   @id @default(cuid())
  slug      String   @unique
  name      String?
  hostEmail String
  devices   Device[]
  createdAt DateTime @default(now())
}

model Device {
  id        String   @id @default(cuid())
  slug      String
  name      String
  group     Group    @relation(fields: [groupId], references: [id], onDelete: Cascade)
  groupId   String
  reservations Reservation[]

  @@unique([groupId, slug])
}

model Reservation {
  id        String   @id @default(cuid())
  device    Device   @relation(fields: [deviceId], references: [id], onDelete: Cascade)
  deviceId  String
  userEmail String
  start     DateTime
  end       DateTime
  purpose   String?
  createdAt DateTime @default(now())

  @@index([deviceId, start])
  @@index([start, end])
}

model UserProfile {
  email String  @id
  displayName String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
